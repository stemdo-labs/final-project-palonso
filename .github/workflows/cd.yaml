name: CD for Application and K8s Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: string
    
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get version from composer.json
        id: get_version
        run: | 
          VERSION=$(jq -r '.version' app/composer.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set Azure account
        run: |
          az account set --subscription ${{ secrets.SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP_NAME_AKS }} --name ${{ secrets.CLUSTER_NAME }} --overwrite-existing

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Install kubelogin
        run: |
          curl -Lo kubelogin.zip https://github.com/Azure/kubelogin/releases/latest/download/kubelogin-linux-amd64.zip
          unzip kubelogin.zip -d /usr/local/bin
          sudo mv /usr/local/bin/bin/linux_amd64/kubelogin /usr/local/bin/
          rm -rf kubelogin.zip /usr/local/bin/bin

      - name: Convert kubeconfig
        run: |
          kubelogin convert-kubeconfig -l azurecli

      - name: Replace VERSION in deployment.yaml
        run: |
          sed -i 's/${VERSION}/'${{ env.VERSION }}'/' kubernetes/deployment.yaml

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f kubernetes/ -n ns-palonso

      - name: Update deployment image
        run: |
          kubectl set image deployment/my-concert-app my-concert-app=palonsoacr.azurecr.io/my-concert-app:${{ env.VERSION }} -n ns-palonso

      - name: Get all resources in namespace
        run: |
          kubectl get all -n ns-palonso

      - name: Apply Ingress Controller
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.3.0/deploy/static/provider/cloud/deploy.yaml

      - name: Get Ingress pods
        run: |
          kubectl get pods --namespace ingress-nginx

      - name: Get Ingress service
        run: |
          kubectl get service ingress-nginx-controller --namespace=ingress-nginx
