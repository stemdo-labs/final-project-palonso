name: Terraform Destroy

on:
  workflow_dispatch:

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure environment variables
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV

      - name: Stop VMs
        run: |
          az vm deallocate --resource-group rg-palonso --name backup-vm || true
          az vm deallocate --resource-group rg-palonso --name db-vm || true

      - name: Detach Disks from VMs
        run: |
          az vm disk detach --resource-group rg-palonso --vm-name backup-vm --name backup-vm-osdisk || echo "Disk 'backup-vm-osdisk' not found on VM 'backup-vm'"
          az vm disk detach --resource-group rg-palonso --vm-name db-vm --name db-vm-osdisk || echo "Disk 'db-vm-osdisk' not found on VM 'db-vm'"

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Remove Resource Group from State
        run: terraform state rm azurerm_resource_group.main
        working-directory: ./terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform

      - name: Delete Managed Disks
        run: |
          az disk delete --name backup-vm-osdisk --resource-group rg-palonso --yes --no-wait || echo "Disk 'backup-vm-osdisk' not found"
          az disk delete --name db-vm-osdisk --resource-group rg-palonso --yes --no-wait || echo "Disk 'db-vm-osdisk' not found"
