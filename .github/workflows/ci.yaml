name: CI for Application

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get version based on environment
        id: get_version
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            # Use GitHub run number for dev version
            VERSION="dev-build-${{ github.run_number }}"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            # Use version from composer.json for prod
            VERSION=$(jq -r '.version' app/composer.json)
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          fi

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get ACR Password
        id: get_acr_password
        run: |
          ACR_PASSWORD=$(az acr credential show --name ${{ secrets.ACR_NAME }} --query "passwords[0].value" --output tsv)
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV

      - name: Log in to ACR
        run: echo "${{ env.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u "${{ secrets.ACR_NAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/my-concert-app:${{ env.VERSION }} -t ${{ secrets.ACR_NAME }}.azurecr.io/my-concert-app:latest -f app/Dockerfile .
        working-directory: .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/my-concert-app:${{ env.VERSION }}
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/my-concert-app:latest
